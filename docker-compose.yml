# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#       args:
#         - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
#     restart: unless-stopped
#     ports:
#       - 3000:3000
#     environment:
#       DATABASE_URL: ${DATABASE_URL}
#       # NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE} # To add public vars later
#       NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL}
#     depends_on:
#       postgres:
#         condition: service_healthy
#     networks:
#       - my_network

#   postgres:
#     image: postgres:alpine
#     restart: unless-stopped
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#     ports:
#       - "${POSTGRES_PORT}:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
#       interval: 5s
#       timeout: 5s
#       retries: 3
#       start_period: 10s
#     networks:
#       - my_network

# volumes:
#   postgres_data:

# networks:
#   my_network:


services:
  postgres:
    image: postgres:16.4-alpine
    container_name: next_saas_starter_postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
